name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches: ["dev"]
    paths-ignore:
      - 'README.md'

env:
  PROJECT_ID: 'ecom-chat-437005'
  GAR_NAME: 'verta-chat'
  GAR_LOCATION: "us-east1" 
  SERVICE: 'verta-service'
  REGION: "us-east1"

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  deploy:
    name: Continuous Delivery
    needs: integration
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout'
        uses: actions/checkout@4 

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Docker Auth'
        run: |-
          gcloud auth configure-docker "us-east1-docker.pkg.dev"
  
      - name: 'Build and Push Container'
        run: |-
          docker build -t "us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" -f Dockerfile .
          docker push "us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: 'us-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}'
          env_vars: |
            OPENAI_API_KEY= ${{ vars.OPENAI_API_KEY }}
            HF_TOKEN = ${{ vars.HF_TOKEN }}
            GROQ_API_KEY = ${{ vars.GROQ_API_KEY }}
            LANGFUSE_SECRET_KEY = ${{ vars.LANGFUSE_SECRET_KEY }}
            LANGFUSE_PUBLIC_KEY = ${{ vars.LANGFUSE_PUBLIC_KEY }}
            LANGFUSE_HOST = ${{ vars.LANGFUSE_HOST }}
            DB_USER = ${{ vars.DB_USER }}
            DB_PASS = ${{ vars.DB_PASS }}
            DB_NAME = ${{ vars.DB_NAME }}
            INSTANCE_CONNECTION_NAME = ${{ vars.INSTANCE_CONNECTION_NAME }}

      - name: 'Show output'
        run: echo ${{ steps.deploy.outputs.url }}
